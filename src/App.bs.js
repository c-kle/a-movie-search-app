// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Movie$ReactHooksTemplate = require("./Movie.bs.js");
var Header$ReactHooksTemplate = require("./Header.bs.js");
var Search$ReactHooksTemplate = require("./Search.bs.js");
var MovieData$ReactHooksTemplate = require("./MovieData.bs.js");

require("./App.css");

function App(Props) {
  var match = React.useReducer((function (state, action) {
          if (action) {
            return /* record */[
                    /* isLoading */false,
                    /* results */action[0],
                    /* errorMessage */state[/* errorMessage */2]
                  ];
          } else {
            return /* record */[
                    /* isLoading */true,
                    /* results */state[/* results */1],
                    /* errorMessage */state[/* errorMessage */2]
                  ];
          }
        }), /* record */[
        /* isLoading */false,
        /* results : [] */0,
        /* errorMessage */""
      ]);
  var dispatch = match[1];
  var state = match[0];
  var searchFunc = function (text) {
    Curry._1(dispatch, /* Search */0);
    MovieData$ReactHooksTemplate.Api[/* searchMovies */1](text).then((function (results) {
            Curry._1(dispatch, /* SearchSuccess */[results]);
            return Promise.resolve(/* () */0);
          }));
    return /* () */0;
  };
  var match$1 = state[/* isLoading */0];
  return React.createElement("div", {
              className: "App"
            }, React.createElement(Header$ReactHooksTemplate.make, {
                  text: "HOOKED"
                }), React.createElement(Search$ReactHooksTemplate.make, {
                  searchFunc: searchFunc
                }), React.createElement("p", {
                  className: "App-intro"
                }, "Sharing a few of our favourite movies"), React.createElement("div", {
                  className: "movies"
                }, match$1 ? "Loading..." : $$Array.map((function (movie) {
                          return React.createElement(Movie$ReactHooksTemplate.make, {
                                      movie: movie,
                                      key: movie[/* id */0]
                                    });
                        }), $$Array.of_list(state[/* results */1]))));
}

var make = App;

exports.make = make;
/*  Not a pure module */

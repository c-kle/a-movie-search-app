// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

var apiUrl = "http://www.omdbapi.com/?apikey=32cd990";

function buildSearchUrl(text) {
  return apiUrl + ("&s=" + text);
}

function decodeResults(json) {
  return /* tuple */[
          Json_decode.field("Response", Json_decode.string, json),
          Json_decode.optional((function (param) {
                  return Json_decode.field("Search", (function (param) {
                                return Json_decode.list((function (json) {
                                              return /* record */[
                                                      /* id */Json_decode.field("imdbID", Json_decode.string, json),
                                                      /* title */Json_decode.field("Title", Json_decode.string, json),
                                                      /* poster */Json_decode.optional((function (param) {
                                                              return Json_decode.field("Poster", Json_decode.string, param);
                                                            }), json),
                                                      /* year */Json_decode.field("Year", Json_decode.string, json)
                                                    ];
                                            }), param);
                              }), param);
                }), json),
          Json_decode.optional((function (param) {
                  return Json_decode.field("Error", Json_decode.string, param);
                }), json)
        ];
}

function searchMovies(text) {
  return fetch(buildSearchUrl(text)).then((function (prim) {
                      return prim.json();
                    })).then((function (json) {
                    return Promise.resolve(decodeResults(json));
                  })).then((function (response) {
                  var tmp;
                  var exit = 0;
                  if (response[0] === "True") {
                    var match = response[1];
                    if (match !== undefined && response[2] === undefined) {
                      tmp = /* tuple */[
                        match,
                        undefined
                      ];
                    } else {
                      exit = 1;
                    }
                  } else {
                    exit = 1;
                  }
                  if (exit === 1) {
                    var match$1 = response[2];
                    if (match$1 !== undefined) {
                      var errorMessage = match$1;
                      tmp = errorMessage.length !== 0 ? /* tuple */[
                          undefined,
                          errorMessage
                        ] : /* tuple */[
                          undefined,
                          "Unknown error"
                        ];
                    } else {
                      tmp = /* tuple */[
                        undefined,
                        "Unknown error"
                      ];
                    }
                  }
                  return Promise.resolve(tmp);
                })).catch((function (error) {
                console.log(error);
                return Promise.resolve(/* tuple */[
                            undefined,
                            "Errooor..."
                          ]);
              }));
}

var Api = /* module */[
  /* decodeResults */decodeResults,
  /* searchMovies */searchMovies
];

exports.apiUrl = apiUrl;
exports.buildSearchUrl = buildSearchUrl;
exports.Api = Api;
/* No side effect */
